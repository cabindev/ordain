{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/sdn-api/app/api/ordain/route.ts"],"sourcesContent":["import { google } from 'googleapis';\nimport { NextResponse } from 'next/server';\n\nexport const dynamic = 'force-dynamic'; // ป้องกันการแคชผลลัพธ์ของ API\nexport const revalidate = 0; // บังคับรีเฟรชข้อมูลทุกครั้งที่เรียกใช้\n\nexport async function GET(req: Request) {\n  try {\n    // ตั้งค่า auth credentials\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\n        private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],\n    });\n\n    const sheets = google.sheets({ version: 'v4', auth });\n    \n    // ID ของ Google Sheet\n    const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;\n    \n    // เพิ่ม timestamp เพื่อป้องกันการแคชข้อมูลในระดับ Google Sheets API\n    const timestamp = new Date().getTime();\n    \n    // ดึงข้อมูลจากชีตหลัก\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId,\n      range: 'A1:Z100',\n      valueRenderOption: 'UNFORMATTED_VALUE', // ดึงค่าที่ไม่มีการจัดรูปแบบ\n      dateTimeRenderOption: 'FORMATTED_STRING', // แปลงวันที่เป็นรูปแบบ string\n    });\n\n    // ข้อมูลที่ได้จะอยู่ใน response.data.values\n    const rawData = response.data.values;\n    \n    if (!rawData || rawData.length === 0) {\n      return NextResponse.json({ error: 'ไม่พบข้อมูลในชีต' }, { status: 404 });\n    }\n\n    console.log(`Data fetched at ${new Date().toISOString()}, rows count:`, rawData.length);\n\n    // สร้างฟังก์ชั่นช่วยดึงค่าตัวเลขจาก cell\n    const extractNumber = (value: any): number => {\n      if (!value) return 0;\n      \n      // ถ้าเป็นตัวเลขอยู่แล้ว\n      if (typeof value === 'number') return value;\n      \n      // ถ้าเป็น string ให้แปลงเป็นตัวเลข\n      const cleanValue = value.toString().replace(/,/g, '').trim();\n      const parsed = parseFloat(cleanValue);\n      return isNaN(parsed) ? 0 : parsed;\n    };\n\n    // อ่านค่าที่จำเป็นและแปลงเป็นตัวเลข\n    const implementationAreaCount = extractNumber(rawData[4]?.[1]);\n    const policyExpansionAreaCount = extractNumber(rawData[7]?.[1]);\n    const modelMonksCount = extractNumber(rawData[56]?.[0]);\n    const alcoholReductionTotal = extractNumber(rawData[49]?.[0]);\n    const alcoholSavings = extractNumber(rawData[58]?.[0]);\n    const expensePerMonk = extractNumber(rawData[58]?.[1]);\n    const policyCount = extractNumber(rawData[60]?.[0]);\n\n    // จัดโครงสร้างข้อมูลเพื่อส่งกลับ\n    const data = {\n      projectName: \"โครงการบวชสร้างสุข\",\n      projectSubtitle: \"พื้นที่ปลอดภัย ที่มีการควบคุมการดื่มเครื่องดื่มแอลกอฮอล์ในงานบุญประเพณี\",\n      timestamp: timestamp, // เพิ่ม timestamp เพื่อตรวจสอบการอัปเดต\n      implementationArea: {\n        count: implementationAreaCount, // ใช้ค่าที่อ่านจาก Sheet โดยตรง (171 หากมีการอัปเดต)\n        unit: 'พื้นที่',\n      },\n      policyExpansionArea: {\n        count: policyExpansionAreaCount,\n        unit: 'พื้นที่',\n      },\n      regionalData: [\n        { name: \"เหนือบน\", value: 17, percentage: 10.0 },\n        { name: \"เหนือล่าง\", value: 20, percentage: 11.8 },\n        { name: \"อีสานบน\", value: 35, percentage: 20.6 },\n        { name: \"อีสานล่าง\", value: 24, percentage: 14.1 },\n        { name: \"ตะวันออก\", value: 19, percentage: 11.2 },\n        { name: \"กลาง/ปริมณฑล\", value: 17, percentage: 10.0 },\n        { name: \"ใต้บน\", value: 18, percentage: 10.6 },\n        { name: \"ใต้ล่าง\", value: 20, percentage: 11.8 }\n      ],\n      alcoholReduction: {\n        total: alcoholReductionTotal,\n        templeEvents: extractNumber(rawData[49]?.[2]),\n        communityEvents: extractNumber(rawData[49]?.[3]),\n      },\n      modelMonks: {\n        count: modelMonksCount,\n        unit: \"รูป\",\n      },\n      savings: {\n        alcoholSavings: alcoholSavings,\n        expensePerMonk: expensePerMonk,\n      },\n      policy: {\n        count: policyCount,\n        unit: \"พื้นที่\",\n      },\n      summary: {\n        implementationArea: implementationAreaCount,\n        policyExpansionArea: policyExpansionAreaCount,\n        modelMonks: modelMonksCount,\n        alcoholReductionTotal: alcoholReductionTotal,\n        totalSavings: alcoholSavings + expensePerMonk,\n        policy: policyCount\n      },\n      debug: {\n        fetchTime: new Date().toISOString(),\n        rawImplementationArea: rawData[4]?.[1]\n      }\n    };\n\n    // ใช้ Cache-Control header เพื่อป้องกันการแคชในเบราว์เซอร์\n    return NextResponse.json(\n      { data },\n      { \n        headers: {\n          'Cache-Control': 'no-store, max-age=0, must-revalidate',\n          'Expires': '0',\n          'Pragma': 'no-cache'\n        } \n      }\n    );\n    \n  } catch (error) {\n    console.error('Error accessing the spreadsheet:', error);\n    \n    return NextResponse.json({ \n      error: 'เกิดข้อผิดพลาดในการเข้าถึงข้อมูล Google Sheet',\n      message: error?.message\n    }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,MAAM,UAAU,iBAAiB,8BAA8B;AAC/D,MAAM,aAAa,GAAG,wCAAwC;AAE9D,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,2BAA2B;QAC3B,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,cAAc,QAAQ,GAAG,CAAC,mBAAmB;gBAC7C,aAAa,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,QAAQ;YAC/D;YACA,QAAQ;gBAAC;aAAwD;QACnE;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,sBAAsB;QACtB,MAAM,gBAAgB,QAAQ,GAAG,CAAC,qBAAqB;QAEvD,oEAAoE;QACpE,MAAM,YAAY,IAAI,OAAO,OAAO;QAEpC,sBAAsB;QACtB,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD;YACA,OAAO;YACP,mBAAmB;YACnB,sBAAsB;QACxB;QAEA,4CAA4C;QAC5C,MAAM,UAAU,SAAS,IAAI,CAAC,MAAM;QAEpC,IAAI,CAAC,WAAW,QAAQ,MAAM,KAAK,GAAG;YACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,IAAI,OAAO,WAAW,GAAG,aAAa,CAAC,EAAE,QAAQ,MAAM;QAEtF,yCAAyC;QACzC,MAAM,gBAAgB,CAAC;YACrB,IAAI,CAAC,OAAO,OAAO;YAEnB,wBAAwB;YACxB,IAAI,OAAO,UAAU,UAAU,OAAO;YAEtC,mCAAmC;YACnC,MAAM,aAAa,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI;YAC1D,MAAM,SAAS,WAAW;YAC1B,OAAO,MAAM,UAAU,IAAI;QAC7B;QAEA,oCAAoC;QACpC,MAAM,0BAA0B,cAAc,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE;QAC7D,MAAM,2BAA2B,cAAc,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE;QAC9D,MAAM,kBAAkB,cAAc,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;QACtD,MAAM,wBAAwB,cAAc,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;QAC5D,MAAM,iBAAiB,cAAc,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;QACrD,MAAM,iBAAiB,cAAc,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;QACrD,MAAM,cAAc,cAAc,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;QAElD,iCAAiC;QACjC,MAAM,OAAO;YACX,aAAa;YACb,iBAAiB;YACjB,WAAW;YACX,oBAAoB;gBAClB,OAAO;gBACP,MAAM;YACR;YACA,qBAAqB;gBACnB,OAAO;gBACP,MAAM;YACR;YACA,cAAc;gBACZ;oBAAE,MAAM;oBAAW,OAAO;oBAAI,YAAY;gBAAK;gBAC/C;oBAAE,MAAM;oBAAa,OAAO;oBAAI,YAAY;gBAAK;gBACjD;oBAAE,MAAM;oBAAW,OAAO;oBAAI,YAAY;gBAAK;gBAC/C;oBAAE,MAAM;oBAAa,OAAO;oBAAI,YAAY;gBAAK;gBACjD;oBAAE,MAAM;oBAAY,OAAO;oBAAI,YAAY;gBAAK;gBAChD;oBAAE,MAAM;oBAAgB,OAAO;oBAAI,YAAY;gBAAK;gBACpD;oBAAE,MAAM;oBAAS,OAAO;oBAAI,YAAY;gBAAK;gBAC7C;oBAAE,MAAM;oBAAW,OAAO;oBAAI,YAAY;gBAAK;aAChD;YACD,kBAAkB;gBAChB,OAAO;gBACP,cAAc,cAAc,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;gBAC5C,iBAAiB,cAAc,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;YACjD;YACA,YAAY;gBACV,OAAO;gBACP,MAAM;YACR;YACA,SAAS;gBACP,gBAAgB;gBAChB,gBAAgB;YAClB;YACA,QAAQ;gBACN,OAAO;gBACP,MAAM;YACR;YACA,SAAS;gBACP,oBAAoB;gBACpB,qBAAqB;gBACrB,YAAY;gBACZ,uBAAuB;gBACvB,cAAc,iBAAiB;gBAC/B,QAAQ;YACV;YACA,OAAO;gBACL,WAAW,IAAI,OAAO,WAAW;gBACjC,uBAAuB,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE;YACxC;QACF;QAEA,2DAA2D;QAC3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE;QAAK,GACP;YACE,SAAS;gBACP,iBAAiB;gBACjB,WAAW;gBACX,UAAU;YACZ;QACF;IAGJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAElD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;YACP,SAAS,OAAO;QAClB,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}