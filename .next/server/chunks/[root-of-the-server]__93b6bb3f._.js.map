{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/sdn-api/app/lib/googleSheets.ts"],"sourcesContent":["// lib/googleSheets.ts\n\nimport { google } from 'googleapis';\nimport { OrdainData,RegionalData } from '../types/ordain';\n\n/**\n * ฟังก์ชันสำหรับแปลงค่าให้เป็นตัวเลข\n */\nexport const extractNumber = (value: any): number => {\n  if (value === undefined || value === null) return 0;\n  \n  // ถ้าเป็นตัวเลขอยู่แล้ว\n  if (typeof value === 'number') return value;\n  \n  // ถ้าเป็น string ให้แปลงเป็นตัวเลข\n  const cleanValue = value.toString().replace(/,/g, '').trim();\n  const parsed = parseFloat(cleanValue);\n  return isNaN(parsed) ? 0 : parsed;\n};\n\n/**\n * ฟังก์ชันสำหรับดึงข้อมูลจาก Google Sheets\n */\n// เพิ่มพารามิเตอร์ชีตเฉพาะเจาะจงในฟังก์ชัน extractSheetData\nexport async function extractSheetData(): Promise<OrdainData> {\n    try {\n      console.log('Start extracting sheet data:', new Date().toISOString());\n      \n      // ตั้งค่า auth credentials\n      const auth = new google.auth.GoogleAuth({\n        credentials: {\n          client_email: process.env.GOOGLE_CLIENT_EMAIL,\n          private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\n        },\n        scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],\n      });\n  \n      const sheets = google.sheets({ version: 'v4', auth });\n      const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;\n      \n      // ระบุชีต \"Data reports\" อย่างเฉพาะเจาะจง\n      const response = await sheets.spreadsheets.values.get({\n        spreadsheetId,\n        range: 'Data reports!A1:Z100',  // ระบุชีต \"Data reports\"\n        valueRenderOption: 'UNFORMATTED_VALUE',\n        dateTimeRenderOption: 'FORMATTED_STRING',\n      });\n  \n      const rawData = response.data.values;\n      \n      if (!rawData || rawData.length === 0) {\n        throw new Error('ไม่พบข้อมูลในชีต Data reports');\n      }\n  \n      console.log(`Data fetched from \"Data reports\" sheet: rows=${rawData.length}`);\n      \n      // หาข้อมูลในแผ่นงาน \"Data reports\"\n      // ตัวอย่าง: ค้นหาข้อมูลจากแถวหรือคอลัมน์ที่มีป้ายกำกับเฉพาะ\n      let implementationAreaCount = 0;\n      let policyExpansionAreaCount = 0;\n      let alcoholReductionTotal = 0;\n      let modelMonksCount = 0;\n      let alcoholSavings = 0;\n      let expensePerMonk = 0;\n      let policyCount = 0;\n      \n      // ค้นหาแถวที่มีข้อมูลสำคัญโดยการวนลูปและตรวจสอบค่าในคอลัมน์แรก\n      for (let i = 0; i < rawData.length; i++) {\n        const row = rawData[i];\n        if (!row || row.length === 0) continue;\n        \n        const label = String(row[0]).toLowerCase();\n        \n        // ตรวจสอบป้ายกำกับและดึงข้อมูลจากคอลัมน์ที่เหมาะสม\n        if (label.includes('พื้นที่ดำเนินการโครงการ')) {\n          implementationAreaCount = extractNumber(row[1]);\n        } else if (label.includes('พื้นที่ขยายผลระดับนโยบาย')) {\n          policyExpansionAreaCount = extractNumber(row[1]);\n        } else if (label.includes('งานบวชที่ลดการบริโภคแอลกอฮอล์')) {\n          alcoholReductionTotal = extractNumber(row[1]);\n        } else if (label.includes('พระต้นแบบ')) {\n          modelMonksCount = extractNumber(row[1]);\n        } else if (label.includes('ประหยัดค่าเหล้าเบียร์')) {\n          alcoholSavings = extractNumber(row[1]);\n        } else if (label.includes('ประหยัดค่าใช้จ่ายต่อการบวชพระ')) {\n          expensePerMonk = extractNumber(row[1]);\n        } else if (label.includes('นโยบาย') || label.includes('กติกา')) {\n          policyCount = extractNumber(row[1]);\n        }\n      }\n      \n      // พิมพ์ค่าที่ดึงได้เพื่อตรวจสอบ\n      console.log({\n        implementationAreaCount,\n        policyExpansionAreaCount,\n        alcoholReductionTotal,\n        modelMonksCount,\n        alcoholSavings,\n        expensePerMonk,\n        policyCount\n      });\n  \n      // สร้างข้อมูลภูมิภาค - ต้องหาจากแผ่นงานเช่นกัน\n      const regionalData: RegionalData[] = [\n        { name: \"เหนือบน\", value: 17, percentage: 10.0 },\n        { name: \"เหนือล่าง\", value: 20, percentage: 11.8 },\n        { name: \"อีสานบน\", value: 35, percentage: 20.6 },\n        { name: \"อีสานล่าง\", value: 24, percentage: 14.1 },\n        { name: \"ตะวันออก\", value: 19, percentage: 11.2 },\n        { name: \"กลาง/ปริมณฑล\", value: 17, percentage: 10.0 },\n        { name: \"ใต้บน\", value: 18, percentage: 10.6 },\n        { name: \"ใต้ล่าง\", value: 20, percentage: 11.8 }\n      ];\n  \n      // สร้างข้อมูลโดยรวมเพื่อส่งกลับ\n      const data: OrdainData = {\n        projectName: \"โครงการบวชสร้างสุข\",\n        projectSubtitle: \"พื้นที่ปลอดภัย ที่มีการควบคุมการดื่มเครื่องดื่มแอลกอฮอล์ในงานบุญประเพณี\",\n        timestamp: new Date().getTime(),\n        implementationArea: {\n          count: implementationAreaCount.toString(),\n          unit: 'พื้นที่',\n        },\n        policyExpansionArea: {\n          count: policyExpansionAreaCount.toString(),\n          unit: 'พื้นที่',\n        },\n        regionalData: regionalData,\n        alcoholReduction: {\n          total: alcoholReductionTotal.toString(),\n          templeEvents: \"220\",  // ต้องหาค่าจริงจากแผ่นงาน\n          communityEvents: \"130\",  // ต้องหาค่าจริงจากแผ่นงาน\n        },\n        modelMonks: {\n          count: modelMonksCount.toString(),\n          unit: \"รูป\",\n        },\n        savings: {\n          alcoholSavings: alcoholSavings.toString(),\n          expensePerMonk: expensePerMonk.toString(),\n        },\n        policy: {\n          count: policyCount.toString(),\n          unit: \"พื้นที่\",\n        },\n        debug: {\n          fetchTime: new Date().toISOString(),\n          sheetName: \"Data reports\"\n        }\n      };\n  \n      return data;\n    } catch (error) {\n      console.error('Error extracting sheet data:', error);\n      throw error;\n    }\n  }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/sdn-api/app/api/ordain/test/route.ts"],"sourcesContent":["// app/api/ordain/test/route.ts\n\nimport { NextResponse } from 'next/server';\nimport { testGoogleSheetsConnection } from '@/app/lib/googleSheets';\n\nexport const dynamic = 'force-dynamic'; // ป้องกันการแคชผลลัพธ์ของ API\nexport const revalidate = 0; // บังคับรีเฟรชข้อมูลทุกครั้งที่เรียกใช้\n\nexport async function GET(req: Request) {\n  try {\n    const result = await testGoogleSheetsConnection();\n    \n    return NextResponse.json(result, { \n      headers: {\n        'Cache-Control': 'no-store, max-age=0, must-revalidate',\n        'Expires': '0',\n        'Pragma': 'no-cache'\n      } \n    });\n  } catch (error) {\n    console.error('API test error:', error);\n    \n    return NextResponse.json({ \n      success: false, \n      message: 'เกิดข้อผิดพลาดในการทดสอบการเชื่อมต่อ',\n      error: error.message \n    }, { status: 500 });\n  }\n}"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;AAE/B;AACA;;;AAEO,MAAM,UAAU,iBAAiB,8BAA8B;AAC/D,MAAM,aAAa,GAAG,wCAAwC;AAE9D,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,4HAAA,CAAA,6BAA0B,AAAD;QAE9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ;YAC/B,SAAS;gBACP,iBAAiB;gBACjB,WAAW;gBACX,UAAU;YACZ;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QAEjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT,OAAO,MAAM,OAAO;QACtB,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}