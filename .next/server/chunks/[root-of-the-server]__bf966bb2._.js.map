{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/sdn-api/app/lib/googleSheets.ts"],"sourcesContent":["// lib/googleSheets.ts\n\nimport { google } from 'googleapis';\nimport { OrdainData,ConnectionStatus } from '../types/ordain';\n\n/**\n * ฟังก์ชันสำหรับแปลงค่าให้เป็นตัวเลข\n */\nexport const extractNumber = (value: any): number => {\n  if (value === undefined || value === null) return 0;\n  \n  // ถ้าเป็นตัวเลขอยู่แล้ว\n  if (typeof value === 'number') return value;\n  \n  // ถ้าเป็น string ให้แปลงเป็นตัวเลข\n  const cleanValue = value.toString().replace(/,/g, '').trim();\n  const parsed = parseFloat(cleanValue);\n  return isNaN(parsed) ? 0 : parsed;\n};\n\n/**\n * ฟังก์ชันสำหรับตรวจสอบการเชื่อมต่อกับ Google Sheets\n */\nexport async function testGoogleSheetsConnection(): Promise<ConnectionStatus> {\n  try {\n    const now = new Date();\n    console.log('Starting connection test at:', now.toISOString());\n    \n    // ตรวจสอบว่ามี credentials ที่จำเป็นหรือไม่\n    if (!process.env.GOOGLE_CLIENT_EMAIL) {\n      return {\n        success: false,\n        message: 'GOOGLE_CLIENT_EMAIL ไม่ได้ถูกกำหนดในตัวแปรสภาพแวดล้อม',\n        timestamp: now.toISOString()\n      };\n    }\n    \n    if (!process.env.GOOGLE_PRIVATE_KEY) {\n      return {\n        success: false,\n        message: 'GOOGLE_PRIVATE_KEY ไม่ได้ถูกกำหนดในตัวแปรสภาพแวดล้อม',\n        timestamp: now.toISOString()\n      };\n    }\n    \n    if (!process.env.GOOGLE_SPREADSHEET_ID) {\n      return {\n        success: false,\n        message: 'GOOGLE_SPREADSHEET_ID ไม่ได้ถูกกำหนดในตัวแปรสภาพแวดล้อม',\n        timestamp: now.toISOString()\n      };\n    }\n    \n    // แสดง log ข้อมูล credentials โดยไม่เปิดเผยรายละเอียดที่สำคัญ\n    console.log('Google Sheet ID:', process.env.GOOGLE_SPREADSHEET_ID);\n    console.log('Client Email:', process.env.GOOGLE_CLIENT_EMAIL);\n    console.log('Private Key available:', process.env.GOOGLE_PRIVATE_KEY ? 'Yes' : 'No');\n    \n    // ตั้งค่า auth credentials\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\n        private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],\n    });\n\n    const sheets = google.sheets({ version: 'v4', auth });\n    const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;\n    \n    // ทดสอบดึงข้อมูลจำนวนน้อย\n    const testResponse = await sheets.spreadsheets.values.get({\n      spreadsheetId,\n      range: 'A1:C5',\n    });\n    \n    // ตรวจสอบผลลัพธ์\n    if (!testResponse.data.values || testResponse.data.values.length === 0) {\n      return {\n        success: false,\n        message: 'เชื่อมต่อสำเร็จแต่ไม่พบข้อมูลในช่วงที่ระบุ',\n        timestamp: now.toISOString(),\n        details: { responseStatus: testResponse.status }\n      };\n    }\n    \n    return {\n      success: true,\n      message: 'เชื่อมต่อกับ Google Sheets สำเร็จ',\n      timestamp: now.toISOString(),\n      details: { \n        sampleData: testResponse.data.values,\n        responseStatus: testResponse.status\n      }\n    };\n  } catch (error) {\n    console.error('Error testing connection:', error);\n    return {\n      success: false,\n      message: `เกิดข้อผิดพลาดในการเชื่อมต่อกับ Google Sheets: ${error.message}`,\n      timestamp: new Date().toISOString(),\n      details: { error: error.message, stack: error.stack }\n    };\n  }\n}\n\n/**\n * ฟังก์ชันสำหรับดึงข้อมูลตัวอย่าง\n */\nexport function getSampleData(): OrdainData {\n  return {\n    projectName: \"โครงการบวชสร้างสุข (ข้อมูลตัวอย่าง)\",\n    projectSubtitle: \"พื้นที่ปลอดภัย ที่มีการควบคุมการดื่มเครื่องดื่มแอลกอฮอล์ในงานบุญประเพณี\",\n    timestamp: new Date().getTime(),\n    implementationArea: {\n      count: \"171\",\n      unit: 'พื้นที่',\n    },\n    policyExpansionArea: {\n      count: \"124\",\n      unit: 'พื้นที่',\n    },\n    regionalData: [\n      { name: \"เหนือบน\", value: 17, percentage: 10.0 },\n      { name: \"เหนือล่าง\", value: 20, percentage: 11.8 },\n      { name: \"อีสานบน\", value: 35, percentage: 20.6 },\n      { name: \"อีสานล่าง\", value: 24, percentage: 14.1 },\n      { name: \"ตะวันออก\", value: 19, percentage: 11.2 },\n      { name: \"กลาง/ปริมณฑล\", value: 17, percentage: 10.0 },\n      { name: \"ใต้บน\", value: 18, percentage: 10.6 },\n      { name: \"ใต้ล่าง\", value: 20, percentage: 11.8 }\n    ],\n    alcoholReduction: {\n      total: \"350\",\n      templeEvents: \"220\",\n      communityEvents: \"130\",\n    },\n    modelMonks: {\n      count: \"450\",\n      unit: \"รูป\",\n    },\n    savings: {\n      alcoholSavings: \"3500000\",\n      expensePerMonk: \"2100000\",\n    },\n    policy: {\n      count: \"85\",\n      unit: \"พื้นที่\",\n    }\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/sdn-api/app/api/ordain/route.ts"],"sourcesContent":["import { google } from 'googleapis';\nimport { NextResponse } from 'next/server';\nimport { extractSheetData,getSampleData } from '@/app/lib/googleSheets';\n\nexport const dynamic = 'force-dynamic'; // ป้องกันการแคชผลลัพธ์ของ API\nexport const revalidate = 0; // บังคับรีเฟรชข้อมูลทุกครั้งที่เรียกใช้\n\nexport async function GET(req: Request) {\n  try {\n    console.log('Starting API request at:', new Date().toISOString());\n    \n    // ดึงข้อมูลจาก Google Sheets\n    const data = await extractSheetData();\n    \n    // ส่งข้อมูลกลับพร้อมตั้งค่า header เพื่อป้องกันการแคช\n    return NextResponse.json(\n      { data },\n      { \n        headers: {\n          'Cache-Control': 'no-store, max-age=0, must-revalidate',\n          'Expires': '0',\n          'Pragma': 'no-cache'\n        } \n      }\n    );\n  } catch (error) {\n    console.error('Error accessing the spreadsheet:', error);\n    \n    // ถ้าเกิดข้อผิดพลาด ให้ใช้ข้อมูลตัวอย่างแทน\n    const sampleData = getSampleData();\n    \n    // ส่งข้อมูลตัวอย่างกลับแทน\n    return NextResponse.json({ data: sampleData });\n  }\n}"],"names":[],"mappings":";;;;;AACA;AACA;;;AAEO,MAAM,UAAU,iBAAiB,8BAA8B;AAC/D,MAAM,aAAa,GAAG,wCAAwC;AAE9D,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,QAAQ,GAAG,CAAC,4BAA4B,IAAI,OAAO,WAAW;QAE9D,6BAA6B;QAC7B,MAAM,OAAO,MAAM,CAAA,GAAA,4HAAA,CAAA,mBAAgB,AAAD;QAElC,sDAAsD;QACtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE;QAAK,GACP;YACE,SAAS;gBACP,iBAAiB;gBACjB,WAAW;gBACX,UAAU;YACZ;QACF;IAEJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAElD,4CAA4C;QAC5C,MAAM,aAAa,CAAA,GAAA,4HAAA,CAAA,gBAAa,AAAD;QAE/B,2BAA2B;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,MAAM;QAAW;IAC9C;AACF","debugId":null}}]
}